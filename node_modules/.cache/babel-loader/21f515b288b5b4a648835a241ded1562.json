{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andtsatur/Desktop/Programming/React/my-app/src/App.js\";\nimport './App.css';\nimport React from 'react'; //// example embedding expressions in JSX\n// function App() {\n//   function formatName(user) {\n//     return user.firstName + ' ' + user.lastName;\n//   }\n//   const user = {\n//     firstName: 'Harper',\n//     lastName: 'Perez'\n//   };\n//   const element = (\n//     <h1>\n//       Hello, {formatName(user)}!\n//     </h1>\n//   );\n//   return (\n//     <div>{element}</div>\n//   );\n// }\n////jsx is an expression too\n// function App() {\n//   let obj = {ando: '16'}\n//   let element = obj.ando ? <h1>{obj.ando}</h1> : <h1>Ando</h1>\n//   return element\n// }\n//jsx may contain children\n// function App() {\n//   let avatars = {urdl:'https://s1.1zoom.me/big7/216/_445833.jpg'};\n//   let img = <img src={avatars.urdl}/>\n//   // or img = <img src='https://s1.1zoom.me/big7/216/_445833.jpg'/>\n//   let element = (\n//     <div>\n//       <h1>barev!</h1>\n//       <h2>Arev!</h2>\n//       {img}\n//     </div>\n//   )\n//   return element\n// }\n// const App = () => {\n//   let element = <h1>barev</h1>;\n//   //same \n//   let element1 = React.createElement(\n//     'h1',\n//     {className: 'greeting'},\n//     'hellow world'\n//   )\n// }\n//Rendering components\n// function Welcome({name}) {\n//   return <h1>{name}</h1>\n// }\n// function App() {\n//   return(\n//   <div>\n//     <Welcome name=\"Andranik\"/> \n//     <Welcome name=\"Hayk\"/>\n//     <Welcome name=\"Sara\"/>\n//   </div>\n//   ) \n// }\n//clock component update itself every second \n// class Clock extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello Ando</h1>\n//         <h2>we are creating clock {this.props.date.toLocaleTimeString()}</h2>\n//       </div>\n//       //from now after creating some component I will not delete and reset again function App\n//     )\n//   }\n// }\n//step two replace this.props.date with this.state.date\n// class Clock extends React.Component {\n//   render() {\n//         return (\n//           <div>\n//             <h1>Hello Ando</h1>\n//             <h2>we are creating clock {this.state.date.toLocaleTimeString()}</h2>\n//           </div>\n//         )\n//       }\n// }\n//step3 Add a class constructor that assigns the initial this.state\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props); //(*)\n//     this.state = {date: new Date()}\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello Ando</h1>\n//         <h2>we are creating clock {this.state.date.toLocaleTimeString()}</h2>\n//       </div>\n//     )\n//   } \n// }\n//step 4 add a timer code to component itself\n//adding lifecycle methods componentDidMount and ComponentWillUnmount\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {date: new Date()};\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello Ando</h1>\n//         <h2>we are creating clock {this.state.date.toLocaleTimeString()}</h2>\n//       </div>\n//     )\n//   }\n//   componentDidMount() {\n//     this.timerId = setInterval(() => this.tick(), 1000);\n//   }\n//   componentWillUnmount() {\n//     clearInterval(this.timerId);\n//   }\n// }\n//step5 implementing method tick and setting state (changing initial state by interval)\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {date: new Date()}\n//   }\n//   componentDidMount() {\n//     this.timerId = setInterval(() => this.tick(), 1000)\n//   }\n//   componentWillUnmount() {\n//     clearInterval(this.timerId);\n//   }\n//   tick() {\n//     this.setState({date: new Date()});\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello Ando</h1>\n//         <h2>we are creating clock {this.state.date.toLocaleTimeString()}</h2>\n//       </div>\n//     )\n//   }\n// }\n//clock component without method tick\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {date: new Date()};\n//   }\n//   tick() {\n//     this.setState({date: new Date()})\n//   }\n//   componentDidMount() {\n//     setInterval(this.tick.bind(this),1000); //do not forget about losing this\n//   }\n//   render() {\n//     return (\n//       <h1>{this.state.date.toLocaleTimeString()}</h1>\n//     )\n//   }\n// }\n//a component may choose to pass its state down as props to its child components\n//component would receive the data in its props and wouldn't know where it comes, it can comes from parent props or state doesn't metter;\n\nfunction FormattedDate(props) {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: props.date.toLocaleTimeString()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 10\n  }, this);\n}\n\n_c = FormattedDate;\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setState({\n      date: props.date\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(FormattedDate, {\n      date: this.props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Clock, {\n    date: new Date()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormattedDate\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/andtsatur/Desktop/Programming/React/my-app/src/App.js"],"names":["React","FormattedDate","props","date","toLocaleTimeString","Clock","Component","constructor","setState","render","App","Date"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlaAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBAAO;AAAA,cAAKA,KAAK,CAACC,IAAN,CAAWC,kBAAX;AAAL;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQH,a;;AAGT,MAAMI,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACL,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKM,QAAL,CAAc;AAACL,MAAAA,IAAI,EAAED,KAAK,CAACC;AAAb,KAAd;AACD;;AACDM,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWC;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AATiC;;AAWpC,SAASO,GAAT,GAAe;AACb,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAE,IAAIC,IAAJ;AAAb;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;MAJQD,G;AAKT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React from 'react'\n\n//// example embedding expressions in JSX\n// function App() {\n//   function formatName(user) {\n//     return user.firstName + ' ' + user.lastName;\n//   }\n  \n//   const user = {\n//     firstName: 'Harper',\n//     lastName: 'Perez'\n//   };\n  \n//   const element = (\n//     <h1>\n//       Hello, {formatName(user)}!\n//     </h1>\n//   );\n//   return (\n//     <div>{element}</div>\n//   );\n// }\n\n////jsx is an expression too\n// function App() {\n//   let obj = {ando: '16'}\n//   let element = obj.ando ? <h1>{obj.ando}</h1> : <h1>Ando</h1>\n//   return element\n// }\n\n//jsx may contain children\n// function App() {\n//   let avatars = {urdl:'https://s1.1zoom.me/big7/216/_445833.jpg'};\n//   let img = <img src={avatars.urdl}/>\n//   // or img = <img src='https://s1.1zoom.me/big7/216/_445833.jpg'/>\n//   let element = (\n//     <div>\n//       <h1>barev!</h1>\n//       <h2>Arev!</h2>\n//       {img}\n//     </div>\n//   )\n//   return element\n// }\n\n// const App = () => {\n//   let element = <h1>barev</h1>;\n//   //same \n//   let element1 = React.createElement(\n//     'h1',\n//     {className: 'greeting'},\n//     'hellow world'\n//   )\n// }\n\n//Rendering components\n// function Welcome({name}) {\n//   return <h1>{name}</h1>\n// }\n// function App() {\n//   return(\n//   <div>\n//     <Welcome name=\"Andranik\"/> \n//     <Welcome name=\"Hayk\"/>\n//     <Welcome name=\"Sara\"/>\n//   </div>\n//   ) \n// }\n\n//clock component update itself every second \n// class Clock extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello Ando</h1>\n//         <h2>we are creating clock {this.props.date.toLocaleTimeString()}</h2>\n//       </div>\n//       //from now after creating some component I will not delete and reset again function App\n//     )\n//   }\n// }\n//step two replace this.props.date with this.state.date\n// class Clock extends React.Component {\n//   render() {\n//         return (\n//           <div>\n//             <h1>Hello Ando</h1>\n//             <h2>we are creating clock {this.state.date.toLocaleTimeString()}</h2>\n//           </div>\n//         )\n//       }\n// }\n//step3 Add a class constructor that assigns the initial this.state\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props); //(*)\n//     this.state = {date: new Date()}\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello Ando</h1>\n//         <h2>we are creating clock {this.state.date.toLocaleTimeString()}</h2>\n//       </div>\n//     )\n//   } \n// }\n//step 4 add a timer code to component itself\n//adding lifecycle methods componentDidMount and ComponentWillUnmount\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {date: new Date()};\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello Ando</h1>\n//         <h2>we are creating clock {this.state.date.toLocaleTimeString()}</h2>\n//       </div>\n//     )\n//   }\n\n//   componentDidMount() {\n//     this.timerId = setInterval(() => this.tick(), 1000);\n//   }\n//   componentWillUnmount() {\n//     clearInterval(this.timerId);\n//   }\n// }\n//step5 implementing method tick and setting state (changing initial state by interval)\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {date: new Date()}\n//   }\n\n//   componentDidMount() {\n//     this.timerId = setInterval(() => this.tick(), 1000)\n//   }\n//   componentWillUnmount() {\n//     clearInterval(this.timerId);\n//   }\n//   tick() {\n//     this.setState({date: new Date()});\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello Ando</h1>\n//         <h2>we are creating clock {this.state.date.toLocaleTimeString()}</h2>\n//       </div>\n//     )\n//   }\n// }\n\n//clock component without method tick\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {date: new Date()};\n//   }\n//   tick() {\n//     this.setState({date: new Date()})\n//   }\n//   componentDidMount() {\n//     setInterval(this.tick.bind(this),1000); //do not forget about losing this\n//   }\n//   render() {\n//     return (\n//       <h1>{this.state.date.toLocaleTimeString()}</h1>\n//     )\n//   }\n// }\n\n//a component may choose to pass its state down as props to its child components\n//component would receive the data in its props and wouldn't know where it comes, it can comes from parent props or state doesn't metter;\n\nfunction FormattedDate(props) {\n  return <h2>{props.date.toLocaleTimeString()}</h2>\n}\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setState({date: props.date});\n  }\n  render() {\n    return (\n      <FormattedDate date={this.props.date}/>\n    )\n  }\n} \nfunction App() {\n  return (\n    <Clock date={new Date()}/>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}