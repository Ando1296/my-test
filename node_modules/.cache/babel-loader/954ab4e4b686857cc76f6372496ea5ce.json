{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/andtsatur/Desktop/Programming/React/my-app/src/hooks/hook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './hook.css'; //declaring new state variable\n// function Example(props) {\n//     //here\n//     const [count, setCount] = useState(0);\n//     return (\n//         <div>\n//             <p>click to button to set++ counter</p>\n//             <h1>{count}</h1>\n//             <button onClick={() => setCount(count + 1)}>click me</button>\n//         </div>\n//     )\n// }\n//declaring new state variable end\n//You can use the State Hook more than once in a single component:\n// function ExampleWithManyStates() {\n//     // Declare multiple state variables!\n//     const [age, setAge] = useState(42);\n//     const [fruit, setFruit] = useState('banana');\n//     const [todos, setTodos] = useState([{ text: 'Learn Hooks' }]);\n//     // ...\n//   }\n//You can use the State Hook more than once in a single component: end\n//   component sets the document title after React updates the DOM:\n\nfunction Example() {\n  _s();\n\n  const [count, setCount] = useState(0); // Similar to componentDidMount and componentDidUpdate\n\n  useEffect(() => {\n    //// Update the document title using the browser API\n    document.title = `Yout clicked ${count} times`;\n  });\n} // omponent sets the document title after React updates the DOM: **\n\n\n_s(Example, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n\n_c = Example;\nexport default function Hook() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Hook;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Example\");\n$RefreshReg$(_c2, \"Hook\");","map":{"version":3,"sources":["/Users/andtsatur/Desktop/Programming/React/my-app/src/hooks/hook.js"],"names":["React","useEffect","useState","Example","count","setCount","document","title","Hook"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,YAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AAGF;;AACA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC,CADe,CAEf;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAK,IAAAA,QAAQ,CAACC,KAAT,GAAkB,gBAAeH,KAAM,QAAvC;AACH,GAHQ,CAAT;AAIH,C,CACD;;;GARSD,O;;KAAAA,O;AAST,eAAe,SAASK,IAAT,GAAgB;AAC3B,sBACI;AAAA,2BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;MANuBA,I","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './hook.css'\n\n//declaring new state variable\n// function Example(props) {\n//     //here\n//     const [count, setCount] = useState(0);\n//     return (\n//         <div>\n//             <p>click to button to set++ counter</p>\n//             <h1>{count}</h1>\n//             <button onClick={() => setCount(count + 1)}>click me</button>\n//         </div>\n//     )\n// }\n//declaring new state variable end\n\n//You can use the State Hook more than once in a single component:\n// function ExampleWithManyStates() {\n//     // Declare multiple state variables!\n//     const [age, setAge] = useState(42);\n//     const [fruit, setFruit] = useState('banana');\n//     const [todos, setTodos] = useState([{ text: 'Learn Hooks' }]);\n//     // ...\n//   }\n  //You can use the State Hook more than once in a single component: end\n\n\n//   component sets the document title after React updates the DOM:\nfunction Example() {\n    const [count, setCount] = useState(0);\n    // Similar to componentDidMount and componentDidUpdate\n    useEffect(() => {\n        //// Update the document title using the browser API\n        document.title = `Yout clicked ${count} times`\n    })\n}\n// omponent sets the document title after React updates the DOM: **\nexport default function Hook() {\n    return(\n        <div>\n            <Example/>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}