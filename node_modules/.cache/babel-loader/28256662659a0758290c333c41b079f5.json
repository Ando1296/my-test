{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andtsatur/Desktop/Programming/React/my-app/src/App.js\";\nimport './App.css';\nimport React from 'react'; //// example embedding expressions in JSX\n// function App() {\n//   function formatName(user) {\n//     return user.firstName + ' ' + user.lastName;\n//   }\n//   const user = {\n//     firstName: 'Harper',\n//     lastName: 'Perez'\n//   };\n//   const element = (\n//     <h1>\n//       Hello, {formatName(user)}!\n//     </h1>\n//   );\n//   return (\n//     <div>{element}</div>\n//   );\n// }\n////jsx is an expression too\n// function App() {\n//   let obj = {ando: '16'}\n//   let element = obj.ando ? <h1>{obj.ando}</h1> : <h1>Ando</h1>\n//   return element\n// }\n//jsx may contain children\n// function App() {\n//   let avatars = {urdl:'https://s1.1zoom.me/big7/216/_445833.jpg'};\n//   let img = <img src={avatars.urdl}/>\n//   // or img = <img src='https://s1.1zoom.me/big7/216/_445833.jpg'/>\n//   let element = (\n//     <div>\n//       <h1>barev!</h1>\n//       <h2>Arev!</h2>\n//       {img}\n//     </div>\n//   )\n//   return element\n// }\n// const App = () => {\n//   let element = <h1>barev</h1>;\n//   //same \n//   let element1 = React.createElement(\n//     'h1',\n//     {className: 'greeting'},\n//     'hellow world'\n//   )\n// }\n//Rendering components\n// function Welcome({name}) {\n//   return <h1>{name}</h1>\n// }\n// function App() {\n//   return(\n//   <div>\n//     <Welcome name=\"Andranik\"/> \n//     <Welcome name=\"Hayk\"/>\n//     <Welcome name=\"Sara\"/>\n//   </div>\n//   ) \n// }\n//clock component update itself every second \n// class Clock extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello Ando</h1>\n//         <h2>we are creating clock {this.props.date.toLocaleTimeString()}</h2>\n//       </div>\n//       //from now after creating some component I will not delete and reset again function App\n//     )\n//   }\n// }\n//step two replace this.props.date with this.state.date\n// class Clock extends React.Component {\n//   render() {\n//         return (\n//           <div>\n//             <h1>Hello Ando</h1>\n//             <h2>we are creating clock {this.state.date.toLocaleTimeString()}</h2>\n//           </div>\n//         )\n//       }\n// }\n//step3 Add a class constructor that assigns the initial this.state\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props); //(*)\n//     this.state = {date: new Date()}\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello Ando</h1>\n//         <h2>we are creating clock {this.state.date.toLocaleTimeString()}</h2>\n//       </div>\n//     )\n//   } \n// }\n//step 4 add a timer code to component itself\n//adding lifecycle methods componentDidMount and ComponentWillUnmount\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {date: new Date()};\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello Ando</h1>\n//         <h2>we are creating clock {this.state.date.toLocaleTimeString()}</h2>\n//       </div>\n//     )\n//   }\n//   componentDidMount() {\n//     this.timerId = setInterval(() => this.tick(), 1000);\n//   }\n//   componentWillUnmount() {\n//     clearInterval(this.timerId);\n//   }\n// }\n//step5 implementing method tick and setting state (changing initial state by interval)\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {date: new Date()}\n//   }\n//   componentDidMount() {\n//     this.timerId = setInterval(() => this.tick(), 1000)\n//   }\n//   componentWillUnmount() {\n//     clearInterval(this.timerId);\n//   }\n//   tick() {\n//     this.setState({date: new Date()});\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello Ando</h1>\n//         <h2>we are creating clock {this.state.date.toLocaleTimeString()}</h2>\n//       </div>\n//     )\n//   }\n// }\n//clock component without method tick\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {date: new Date()};\n//   }\n//   tick() {\n//     this.setState({date: new Date()})\n//   }\n//   componentDidMount() {\n//     setInterval(this.tick.bind(this),1000); //do not forget about losing this\n//   }\n//   render() {\n//     return (\n//       <h1>{this.state.date.toLocaleTimeString()}</h1>\n//     )\n//   }\n// }\n//a component may choose to pass its state down as props to its child components\n//component would receive the data in its props and wouldn't know where it comes, it can comes from parent props or state doesn't metter;\n// function FormattedDate(props) {\n//   return <h2>{props.date.toLocaleTimeString()}</h2>\n// }\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.setState({date: props.date});\n//   }\n//   render() {\n//     return (\n//       <FormattedDate date={this.props.date}/>\n//     )\n//   }\n// }\n//creating App1 component which receives 3 Clocks component\n// class Clock extends React.Component {\n//   // notice that if we not give props it will not throws undefined it throws ''\n//   constructor(props) {\n//     super(props);\n//     // this.state = {date: 15}\n//     this.state = {date: props.date}\n//   }\n//   // componentDidMount() {\n//   //   setInterval(() => this.setState({date: ++this.state.date}),1000);\n//   //   //Attention please here this.state.date++ is not setting new state;\n//   //   //this.setState({date: new Date()}) // in this case without toLocaleTimeString method will be an Error\n//   // }\n//   render() {\n//     return (<h1>{this.state.date}</h1>);\n//   }\n// } \n//Handling events\n// function forButton() {\n//   console.log('there was a click');\n// }// when we are working with buttons we should use camelCase rather than lowercase and use curly braces insted string\n// let button = (\n//   <button onClick={forButton}>click me</button>\n// )\n//2cannot prevent default by returning false \n//in ActionLink component we declare a fanction that preventing the default action of button which was returned by ActionLink component\n// function ActionLink() {\n//   function handleClick(e) {\n//     e.preventDefault();\n//     console.log('default action of a tag was prevented');\n//   }\n//   return (\n//     <a href='#' onClick={handleClick}>click me</a>\n//   )\n// }\n// class Clock extends React.Component {\n//   static counter=0;\n//   constructor(props) {\n//     super(props);\n//     this.state = {done: props.done, date: new Date()}\n//   }\n//   componentDidMount() {\n//     if(Clock.counter > 0) {\n//       setInterval(() => {\n//         this.setState({date: new Date()})\n//       }, 1000)\n//     } else {\n//       console.log('blabla');\n//       Clock.counter++\n//     }\n//   }\n//   render() {\n//     return(\n//       <h1>{this.state.date.toLocaleTimeString()}</h1>\n//     )\n//   }\n// }\n\nclass ButtonforFb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      done: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    document.location.href = 'https://www.facebook.com/';\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleClick,\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Clock, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Clock, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/andtsatur/Desktop/Programming/React/my-app/src/App.js"],"names":["React","ButtonforFb","Component","constructor","props","state","done","handleClick","bind","document","location","href","render","App"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AACDD,EAAAA,WAAW,GAAG;AACZE,IAAAA,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,GAAyB,2BAAzB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAQ,MAAA,OAAO,EAAE,KAAKL,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAbuC;;AAe1C,SAASM,GAAT,GAAe;AACb,sBACE;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAPQA,G;AAQT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React from 'react'\n\n//// example embedding expressions in JSX\n// function App() {\n//   function formatName(user) {\n//     return user.firstName + ' ' + user.lastName;\n//   }\n  \n//   const user = {\n//     firstName: 'Harper',\n//     lastName: 'Perez'\n//   };\n  \n//   const element = (\n//     <h1>\n//       Hello, {formatName(user)}!\n//     </h1>\n//   );\n//   return (\n//     <div>{element}</div>\n//   );\n// }\n\n////jsx is an expression too\n// function App() {\n//   let obj = {ando: '16'}\n//   let element = obj.ando ? <h1>{obj.ando}</h1> : <h1>Ando</h1>\n//   return element\n// }\n\n//jsx may contain children\n// function App() {\n//   let avatars = {urdl:'https://s1.1zoom.me/big7/216/_445833.jpg'};\n//   let img = <img src={avatars.urdl}/>\n//   // or img = <img src='https://s1.1zoom.me/big7/216/_445833.jpg'/>\n//   let element = (\n//     <div>\n//       <h1>barev!</h1>\n//       <h2>Arev!</h2>\n//       {img}\n//     </div>\n//   )\n//   return element\n// }\n\n// const App = () => {\n//   let element = <h1>barev</h1>;\n//   //same \n//   let element1 = React.createElement(\n//     'h1',\n//     {className: 'greeting'},\n//     'hellow world'\n//   )\n// }\n\n//Rendering components\n// function Welcome({name}) {\n//   return <h1>{name}</h1>\n// }\n// function App() {\n//   return(\n//   <div>\n//     <Welcome name=\"Andranik\"/> \n//     <Welcome name=\"Hayk\"/>\n//     <Welcome name=\"Sara\"/>\n//   </div>\n//   ) \n// }\n\n//clock component update itself every second \n// class Clock extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello Ando</h1>\n//         <h2>we are creating clock {this.props.date.toLocaleTimeString()}</h2>\n//       </div>\n//       //from now after creating some component I will not delete and reset again function App\n//     )\n//   }\n// }\n//step two replace this.props.date with this.state.date\n// class Clock extends React.Component {\n//   render() {\n//         return (\n//           <div>\n//             <h1>Hello Ando</h1>\n//             <h2>we are creating clock {this.state.date.toLocaleTimeString()}</h2>\n//           </div>\n//         )\n//       }\n// }\n//step3 Add a class constructor that assigns the initial this.state\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props); //(*)\n//     this.state = {date: new Date()}\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello Ando</h1>\n//         <h2>we are creating clock {this.state.date.toLocaleTimeString()}</h2>\n//       </div>\n//     )\n//   } \n// }\n//step 4 add a timer code to component itself\n//adding lifecycle methods componentDidMount and ComponentWillUnmount\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {date: new Date()};\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello Ando</h1>\n//         <h2>we are creating clock {this.state.date.toLocaleTimeString()}</h2>\n//       </div>\n//     )\n//   }\n\n//   componentDidMount() {\n//     this.timerId = setInterval(() => this.tick(), 1000);\n//   }\n//   componentWillUnmount() {\n//     clearInterval(this.timerId);\n//   }\n// }\n//step5 implementing method tick and setting state (changing initial state by interval)\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {date: new Date()}\n//   }\n\n//   componentDidMount() {\n//     this.timerId = setInterval(() => this.tick(), 1000)\n//   }\n//   componentWillUnmount() {\n//     clearInterval(this.timerId);\n//   }\n//   tick() {\n//     this.setState({date: new Date()});\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello Ando</h1>\n//         <h2>we are creating clock {this.state.date.toLocaleTimeString()}</h2>\n//       </div>\n//     )\n//   }\n// }\n\n//clock component without method tick\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {date: new Date()};\n//   }\n//   tick() {\n//     this.setState({date: new Date()})\n//   }\n//   componentDidMount() {\n//     setInterval(this.tick.bind(this),1000); //do not forget about losing this\n//   }\n//   render() {\n//     return (\n//       <h1>{this.state.date.toLocaleTimeString()}</h1>\n//     )\n//   }\n// }\n\n//a component may choose to pass its state down as props to its child components\n//component would receive the data in its props and wouldn't know where it comes, it can comes from parent props or state doesn't metter;\n\n// function FormattedDate(props) {\n//   return <h2>{props.date.toLocaleTimeString()}</h2>\n// }\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.setState({date: props.date});\n//   }\n//   render() {\n//     return (\n//       <FormattedDate date={this.props.date}/>\n//     )\n//   }\n// }\n\n//creating App1 component which receives 3 Clocks component\n// class Clock extends React.Component {\n//   // notice that if we not give props it will not throws undefined it throws ''\n//   constructor(props) {\n//     super(props);\n//     // this.state = {date: 15}\n//     this.state = {date: props.date}\n//   }\n//   // componentDidMount() {\n//   //   setInterval(() => this.setState({date: ++this.state.date}),1000);\n//   //   //Attention please here this.state.date++ is not setting new state;\n//   //   //this.setState({date: new Date()}) // in this case without toLocaleTimeString method will be an Error\n//   // }\n//   render() {\n//     return (<h1>{this.state.date}</h1>);\n//   }\n// } \n\n\n      //Handling events\n// function forButton() {\n//   console.log('there was a click');\n// }// when we are working with buttons we should use camelCase rather than lowercase and use curly braces insted string\n// let button = (\n//   <button onClick={forButton}>click me</button>\n// )\n\n//2cannot prevent default by returning false \n//in ActionLink component we declare a fanction that preventing the default action of button which was returned by ActionLink component\n// function ActionLink() {\n//   function handleClick(e) {\n//     e.preventDefault();\n//     console.log('default action of a tag was prevented');\n//   }\n//   return (\n//     <a href='#' onClick={handleClick}>click me</a>\n//   )\n// }\n\n// class Clock extends React.Component {\n//   static counter=0;\n//   constructor(props) {\n//     super(props);\n//     this.state = {done: props.done, date: new Date()}\n//   }\n//   componentDidMount() {\n//     if(Clock.counter > 0) {\n//       setInterval(() => {\n//         this.setState({date: new Date()})\n//       }, 1000)\n//     } else {\n//       console.log('blabla');\n//       Clock.counter++\n//     }\n//   }\n//   render() {\n//     return(\n//       <h1>{this.state.date.toLocaleTimeString()}</h1>\n//     )\n//   }\n// }\n\nclass ButtonforFb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {done: true};\n    this.handleClick = this.handleClick.bind(this)  \n  }\n  handleClick() {\n    document.location.href = 'https://www.facebook.com/';\n  }\n  render() {\n    return (\n      <button onClick={this.handleClick} >click me</button>\n    )\n  }\n}\nfunction App() {\n  return (\n    <div>\n      <Clock />\n      <Clock />\n    </div>\n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}